name: Build Test and push
on: [push]
env:
  IMAGE_NAME: student-inventory-api/student_service
  REPO_NAME: pascalvenema

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build docker
        run: |
          docker build . -t $REPO_NAME/$IMAGE_NAME

      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and start services
        run: |
          docker-compose build
          docker-compose up -d
          docker-compose ps
          sleep 5

      # test connectivity with curl before running the Postman tests
      - name: Check connectivity with curl
        run: |
          echo "Curling the service..."

          curl -v \
          -X POST \
          -H "Content-Type: application/json" \
          -d '{
            "first_name": "Pascal",
            "last_name": "Venema",
            "grade_records": [
              {
                "subject_name": "Math",
                "grade": 8.5
              },
              {
                "subject_name": "Science",
                "grade": 9.0
              }
            ]
          }' \
          http://localhost:8080/tutorial/1.0.0/student || true

      # grab logs right away (before tests)
      - name: Show container logs
        run: |
          echo "Showing logs for my_student_svc container..."
          docker logs my_student_svc

      - name: "Check files existence"
        uses: andstor/file-existence-action@v2
        with:
          files: "postman/collection.json,postman/environment.json"
          fail: true

      - name: Run API Tests
        id: run-newman
        uses: anthonyvscode/newman-action@master
        with:
          collection: postman/collection.json
          environment: postman/environment.json
          reporters: cli
          bail: true

      - name: Check if we failed
        id: fail-check
        shell: bash
        env:
          JSON_DOC: ${{ steps.run-newman.outputs.summary }}
        run: |
          printf '%s\n' "$JSON_DOC" > summary.json
          cat summary.json
          if grep -q Collection summary.json; then
            echo "failed=false" >> $GITHUB_OUTPUT;
          else
            echo "failed=true" >> $GITHUB_OUTPUT;
          fi

      - name: fail if empty
        if: ${{ steps.fail-check.outputs.failed == 'true' }}
        run: exit 1

      # dump logs again AFTER the tests, e.g. if they failed
      - name: Dump logs on failure
        if: failure()
        run: |
          echo "Post-failure logs from container"
          docker logs my_student_svc

      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push image to docker hub Container Registry
        run: |
          docker push $REPO_NAME/$IMAGE_NAME
